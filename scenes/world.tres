[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://beki6qvushq0n"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_83nv8"]
input_name = "color"

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_vyxhb"]
function = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


	vec3 n_out3p0;
// ColorFunc:3
	{
		vec3 c = vec3(n_out2p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out3p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// Output:0
	COLOR.rgb = n_out3p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_83nv8")
nodes/fragment/2/position = Vector2(-140, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorFunc_vyxhb")
nodes/fragment/3/position = Vector2(160, 260)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 0)
